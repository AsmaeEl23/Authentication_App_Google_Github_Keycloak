spring.application.name=customer-app
spring.datasource.url=jdbc:h2:mem:customer-db
spring.h2.console.enabled=true
server.port=8081

##GOOGLE
spring.security.oauth2.client.registration.google.clientId=947090233795-jgo4bkkddb7l5p66a1qgq11pd6118nc0.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
#the place of username we display the email
spring.security.oauth2.client.provider.google.user-name-attribute=email

##Github
spring.security.oauth2.client.registration.github.clientId=c7e16a3ae54596d6f51f
spring.security.oauth2.client.registration.github.client-secret=f3bf19d50ad4ac6c0640bc71f2cad130e6787a65
#the place of username we display the login
spring.security.oauth2.client.provider.github.user-name-attribute=login

#Keycloak
spring.security.oauth2.client.registration.keycloak.client-name=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=sdia-customers-app
spring.security.oauth2.client.registration.keycloak.client-secret=f65VK6o1ntoqXSYMmVKsdaUAbRPV5vxY
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
#http://localhost:[Port]/login/oauth2/code/[client_id]
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8081/login/oauth2/code/sdia-customers-app
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/sdia-app-realm
#user-name-attribute: take a look to jwt token_endpoint (the end of the purple lines) [username,email,family_name ....]
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username